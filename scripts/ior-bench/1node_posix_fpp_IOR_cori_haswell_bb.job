#!/bin/ksh

#SBATCH -N 1 --ntasks-per-node=32 -t 30 -J 1node_posix_fpp_bb -p regular -C haswell --mail-type=FAIL --mail-user=jalnliu@lbl.gov --account=nstaff
#DW jobdw capacity=212GB access_mode=striped type=scratch
SCRDIR=$DW_JOB_STRIPED

. /opt/modules/default/init/ksh
module load python/2.7-anaconda
module load dws
JOBID=${SLURM_JOBID:-$$}
TESTDIR=${SCRDIR}/IOR_REGULAR/${SLURM_JOB_NAME}/${JOBID}
rm -rf $TESTDIR
mkdir -p $TESTDIR || exit

RPN=${RPN:-16}        # ranks per node
RANKS=$(( $RPN ))     # only 1 node
SEGMENTS=$(( 206158/$RANKS ))   # SOW

python report-ior.py initialize 1node_posix_fpp_bb_write
python report-ior.py initialize 1node_posix_fpp_bb_read

TRANSFER_SIZE=1000000
OPTIONS="-a POSIX -F -C -e -g -k  -b 1000000 -t $TRANSFER_SIZE -s $SEGMENTS -o $TESTDIR/IOR_file -v"
OUT=${SLURM_JOB_NAME}_${RANKS}ranks_${TRANSFER_SIZE}_${JOBID}
srun -n $RANKS --ntasks-per-node $RPN ../IOR -w $OPTIONS >> ${OUT}.IOR  # write test
srun -n $RANKS --ntasks-per-node $RPN ../IOR -r $OPTIONS >> ${OUT}.IOR  # read test
rm $TESTDIR/IOR_file*
rm -rf $TESTDIR
chgrp fbench *
python report-ior.py finalize 1node_posix_fpp_bb_write $(grep 'Max Write' ${OUT}.IOR | awk '{print $3}' )
python report-ior.py finalize 1node_posix_fpp_bb_read $(grep 'Max Read' ${OUT}.IOR | awk '{print $3}' )
